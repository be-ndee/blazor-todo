@page "/todo-list"
@rendermode InteractiveServer

@inject TodoService todoService
@inject SessionService sessionService

<PageTitle>Todo list</PageTitle>

<h1>Todo list</h1>

@if (showOnlyOpen)
{
    <button @onclick="ToggleShowOnlyOpenFilter">Show all</button>
}
else
{
    <button @onclick="ToggleShowOnlyOpenFilter">Show only open</button>
}

@if (todos == null)
{
    <p>Loading ...</p>
}
else
{
    <ul>
        @foreach (var todo in todos)
        {
            <li>@todo.CreatedAt :: @todo.Name <input type="checkbox" @bind="todo.IsDone" /></li>
        }
    </ul>
}

@if (user != null)
{
    <input type="text" @bind="Name" required />
    <button @onclick="HandleAddTodoButtonClick">Add todo</button>
}

@code {
    private bool showOnlyOpen = false;
    private User? user;
    private List<TodoItem>? todos;

    private string Name = "";

    protected async override Task OnInitializedAsync()
    {
        user = sessionService.GetUser();
        todos = await todoService.GetListAsync() ?? new List<TodoItem>([]);
    }

    public async Task ToggleShowOnlyOpenFilter()
    {
        showOnlyOpen = !showOnlyOpen;
        await OnInitializedAsync();
    }
    public async Task HandleAddTodoButtonClick() {
        if (user != null && Name != null && Name.Length > 0) {
            await todoService.CreateAsync(new TodoItem{
                Name = Name,
                AssigneeUserId = -1,
                CreatedAt = DateTime.Now,
            });
            await OnInitializedAsync();
        }
    }
}
